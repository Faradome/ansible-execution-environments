apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ansible-builder
spec:
  description: >-
    This task will use ansible-builder to build an Ansible Execution Environment and push it to the registry location.
  workspaces:
    - name: ee-repo
      description: The source workspace where the Execution Environment code has been cloned.
    - name: podman-authfile
      description: Registry creds to pull and/or push container images required for creating this EE.
      optional: true
      mountPath: /etc/containers/.authfile
  params:
    - description: Name of the container image to be built
      name: NAME
      type: string
      default: "ansible-execution-env"
    - description: Tag of the container image to be built
      name: TAG
      type: string
      default: "latest"
    - description: ansible-builder output verbosity
      name: VERBOSITY
      type: string
      default: "2"
    - description: ansible-builder Build Args
      name: BUILD_ARGS
      type: string
      default: ""
    - description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      name: PODMAN_TLSVERIFY
      type: string
      default: "false"
  steps:

    - name: ansible-builder create context
      workingDir: $(workspaces.ee-repo.path)
      image: registry.redhat.io/ansible-automation-platform-21/ansible-builder-rhel8:1.0.1-47
      script: |
        #!/bin/sh
        set -eux -o pipefail

        env

        ansible-builder create -v "$(params.VERBOSITY)" --tag "$(params.NAME):$(params.TAG)" --build-arg "$(params.BUILD_ARGS)"

    - name: podman build ee
      workingDir: $(workspaces.ee-repo.path)
      image: registry.redhat.io/ubi8/podman:8.5-17
      script: |
        #!/bin/sh
        set -eux -o pipefail

        env

        PODMAN_AUTHFILE=""
        [[ "$(workspaces.podman-authfile.bound)" == "true" ]] && PODMAN_AUTHFILE="--authfile "$(workspaces.podman-authfile.path)"

        IMAGE_NAME="$(params.NAME):$(params.TAG)"
        podman build --tls-verify "$(params.PODMAN_TLSVERIFY)" "$PODMAN_AUTHFILE" -f context/Containerfile -t "$IMAGE_NAME"

        podman push --tls-verify "$(params.PODMAN_TLSVERIFY)" "$PODMAN_AUTHFILE" "$IMAGE_NAME"